//{ Driver Code Starts
// C++ program to evaluate value of a postfix expression

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    //Function to evaluate a postfix expression.
    int evaluatePostfix(string S)
    {
        // Your code here
        stack<int>st;
        int n = S.size();
        int i=0;
        while(i<n){
            int num = S[i]-'0';
            if(num>=0 && num<=9){
                st.push(num);
            }
            else {
                int temp1 = st.top();
                st.pop();
                int temp2 = st.top();
                st.pop();
                
                if(S[i]=='+'){
                    st.push(temp1+temp2);
                }
                else if(S[i]=='-')
                    st.push(temp2-temp1);
                else if (S[i]=='/')
                    st.push(temp2/temp1);
                else if(S[i]=='*')
                    st.push(temp1*temp2);
            }
            i++;
        }
        return st.top();
    }
};

//{ Driver Code Starts.

// Driver program to test above functions
int main()
{
    int t;
    cin>>t;
    cin.ignore(INT_MAX, '\n');
    while(t--)
    {
        string S;
        cin>>S;
        Solution obj;
    
    cout<<obj.evaluatePostfix(S)<<endl;
    }
    return 0;
}

// } Driver Code Ends
