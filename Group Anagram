class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
    
        // // T.C n*klogk
        // unordered_map<string,vector<string>>mp;
        // vector<vector<string>>ans;
        
        // for(auto it: strs){
        //     string key = it;
        //     sort(key.begin(),key.end());
        //     mp[key].push_back(it);
        // }
        
        // for(auto [key,val]: mp)
        // ans.push_back(val);
        // return ans;

        // Another Approach
        T.C = O(nk)
        s.c = O(nk)
        unordered_map<string ,vector<string>>mp;
        for(auto s: strs){
            vector<int>freq(26,0);
            string hashString = "";
            for(auto ch:s) freq[ch-'a']++;
            for(int i=0;i<26;i++){
                hashString.push_back(freq[i]);
                hashString.push_back('#');
            }
            mp[hashString].push_back(s);
        }
        vector<vector<string>>ans;
        for(auto [k,vectorOfString]:mp){
            ans.push_back(vectorOfString);
        }
        return ans;
    }
};
