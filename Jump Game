class Solution {
public:
    bool canJump(vector<int>& nums) {
        //Brute Force
    //     int n = nums.size();
    //     vector<bool>v(n,false);
    //     v[n-1] = true;
    //     for(int i=n-2;i>=0;i--){
    //        if(nums[i]+i<=n-1 ){
    //             for(int j = i;j<=nums[i]+i;j++){
    //                 if(v[j]==true){
    //                    v[i]=true;
    //                    break; 
    //                 }
    //             }
    //        }
    //        else{
    //             v[i] = true;
    //        }

    //     }
    //     for(auto it:v){
    //         cout<<it<<" ";
    //     }
    //     return v[0];
    // }

    //OPTIMAL
    int n=nums.size();
    int maxIndex = 0;
    for(int i=0;i<n;i++){
        if(i>maxIndex) return false;
        maxIndex = max(nums[i]+i,maxIndex);
    }
    return true;
    }
};
